class Rectangle {
    // Attributes with default values
    private double length = 1.0;
    private double width = 1.0;

    // Constructor (optional, to initialize with default values or given values)
    public Rectangle() {
    }

    public Rectangle(double length, double width) {
        setLength(length);
        setWidth(width);
    }

    // Getters and Setters with validation
    public double getLength() {
        return length;
    }

    public void setLength(double length) {
        if (length > 0.0 && length < 20.0) {
            this.length = length;
        } else {
            throw new IllegalArgumentException("Length must be > 0.0 and < 20.0");
        }
    }

    public double getWidth() {
        return width;
    }

    public void setWidth(double width) {
        if (width > 0.0 && width < 20.0) {
            this.width = width;
        } else {
            throw new IllegalArgumentException("Width must be > 0.0 and < 20.0");
        }
    }

    // Method to calculate perimeter
    public double calculatePerimeter() {
        return 2 * (length + width);
    }

    // Method to calculate area
    public double calculateArea() {
        return length * width;
    }
}

// Test program
public class Main {
    public static void main(String[] args) {
        try {
            // Creating a Rectangle object with default values
            Rectangle rectangle1 = new Rectangle();
            System.out.println("Default Rectangle:");
            displayRectangleInfo(rectangle1);

            // Creating a Rectangle object with specific values
            Rectangle rectangle2 = new Rectangle(5.0, 10.0);
            System.out.println("\nRectangle with Length 5.0 and Width 10.0:");
            displayRectangleInfo(rectangle2);

            // Testing the set methods with valid values
            rectangle2.setLength(15.0);
            rectangle2.setWidth(7.5);
            System.out.println("\nUpdated Rectangle (Length 15.0, Width 7.5):");
            displayRectangleInfo(rectangle2);

            // Testing the set methods with an invalid value
            // Uncomment below lines to test invalid input handling
            // rectangle2.setLength(25.0); // This will throw an exception

        } catch (IllegalArgumentException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    // Helper method to display rectangle info
    public static void displayRectangleInfo(Rectangle rectangle) {
        System.out.println("Length: " + rectangle.getLength());
        System.out.println("Width: " + rectangle.getWidth());
        System.out.println("Perimeter: " + rectangle.calculatePerimeter());
        System.out.println("Area: " + rectangle.calculateArea());
    }
}
